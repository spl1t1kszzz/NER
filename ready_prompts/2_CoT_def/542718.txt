Ты являешься экспертом по извлечению референции из текстов по компьютерной лингвистике на русском языке и решаешь задачу разрешения кореференции(coreference resolution) с использованием пошагового внутреннего рассуждения (chain-of-thought). Внутренние рассуждения должны использоваться для выбора наиболее вероятных связей между упоминаниями, но они не должны отображаться в итоговом ответе.

Следуй следующим шагам:

Шаг 1 (Извлечение упоминаний):
- Прочитай текст.
- Выпиши все упоминания сущностей, принадлежащие следующим классам: "Activity", "Application", "Dataset", "Environment", "InfoResource", "Lang", "Method", "Metric", "Model", "Object", "Organization", "Person", "Science", "Subject", "Task", а также местоимения и фразы, которые могут ссылаться на эти сущности.
    - Определение класса "Activity":
        Activity (Деятельность):
            Деятельность — это процесс, направленный на получение научного результата или продукта. Она имеет цель,
            которая выражается в предмете исследования, и приводит к созданию различных научных ресурсов, таких как:
            Оценка качества,
            Корпусы,
            Наборы данных,
            Словари и тезаурусы,
            Онтологии,
            Базы данных.
    - Определение класса "Application":
        Application (Приложение):
            Приложение — это прикладная система, технология или программный продукт,
            использующий методы ("Method") для решения задач ("Task") в
            определенном разделе науки ("Science").
            Приложения играют ключевую роль в деятельности ("Activity") и
            применяются к объектам исследования ("Object") для достижения конкретных целей.

            Приложения включают в себя технологии, программные продукты, библиотеки и фреймворки, которые обеспечивают функциональность для реализации научных и прикладных задач.
            Примеры сущностей класса "Application":

            - Автоматический анализатор
            - Морфологический анализатор
            - PyTorch-LifeStream
            - Прикладные системы
            - Библиотеки и фреймворки
            Приложения интегрируют методы и технологии, предоставляя пользователям инструменты для решения широкого спектра задач, от анализа текстов до генерации и обработки данных.
            Деятельность предоставляет доступ к результатам и может быть связана с различными лексико-семантическими,
            морфологическими, синтаксическими и грамматическими ресурсами, которые являются подклассами научных результатов.
   - Определение класса "Dataset":
        Структурированный набор данных, собранный и организованный таким образом,
        чтобы его можно было удобно хранить, извлекать и анализировать,
        содержащий разнообразные наблюдения и атрибуты,
        используемые для обучения моделей машинного обучения, анализа и статистики.
   - Определение класса "Environment":
        Environment (Окружение):
            Окружение — это программная или аппаратная среда,
            в которой выполняется приложение ("Application")
            или осуществляется деятельность ("Activity").
            Окружение предоставляет необходимые инструменты, платформы и инфраструктуру
            для реализации методов, решения задач и выполнения прикладных действий.

            Примеры сущностей класса "Environment":

                iOS,
                Python Jupyter,
                SQLAlchemy.

            Окружение играет вспомогательную роль, обеспечивая совместимость и взаимодействие приложений и методов с аппаратными или программными компонентами, а также предоставляя удобные средства для разработки, тестирования и выполнения.
   - Определение класса "InfoResource":
        Систематизированный набор информации, который предоставляет доступ к данным и знаниям по определенным темам,
        часто организованный таким образом, чтобы облегчить поиск и извлечение.
   - Определение класса "Lang":
        Средство коммуникации, обладающее уникальными характеристиками и структурой,
        отличающееся от других языков, поддерживающее языковую и культурную разнообразие человечества,
        и которые могут быть классифицированы как национальные, региональные или международные языки.
   - Определение класса "Method":
        Метод (Method) — это подход или процесс, применяемый для решения задач, описания объектов исследования,
        а также для реализации научных результатов.
        Методы могут быть описаны в публикациях, использоваться в приложениях, применяться в окружении и решать задачи.
   - Определение класса "Metric":
        Числовое представление, используемое для количественной оценки
        и сравнения свойств или характеристик объектов, процессов или систем,
        таких как точность, полнота, F1-мера и другие измерения в области статистики и анализа данных.
   - Определение класса "Model":
        Model — это обучаемая структура или алгоритм,
        который используется для анализа данных и решения задач в области машинного обучения.
        Модель строится на основе входных данных ("Dataset") и обучается предсказывать или классифицировать новые данные.
   - Определение класса "Object":
        Object (Объект исследования):
        Объект исследования — это сущность, которая изучается в рамках научной деятельности. Объект включает в себя различные аспекты, такие как:
            - Невербальная коммуникация.
            - Речевые произведения (например, звучащая речь и текст).
            - Структурные языковые единицы, включающие лексические, морфологические, синтаксические и фонетико-фонологические единицы (сегментные и супрасегментные).
            - Объект исследования описывает более широкую категорию, из которой выделяются предметы исследования.
   - Определение класса "Organization":
        Структурное объединение людей, ресурсов и технологий,
        созданное для достижения определенных целей и задач,
        которое может функционировать в различных сферах,
        включая образование, науку и бизнес, например, IT-компании.
   - Определение класса "Person":
        Субъект человеческой природы, обладающий уникальной индивидуальностью и сознанием,
        который способен к взаимодействию, коммуникации и эмоциональному восприятию,
        характеризующийся набором личных данных и качеств, включая имя, возраст, пол.
   - Определение класса "Science":
        Science (Раздел науки):
        Раздел науки — это область знаний, которая изучает конкретные объекты и предметы исследования.
        Она определяет подходы, методы и направления анализа данных в рамках выбранной тематики.
        Раздел науки включает теоретические и практические аспекты, связанные с изучением различных явлений и технологий.
        Примеры сущностей класса "Science":
            NLP (Natural Language Processing),
            AI (Artificial Intelligence),
            Фонетика,
            Морфология,
            Компьютерная семантика,
            Генеративная лингвистика,
            Машинный перевод,
            Информационный поиск,
            Интеллектуальный анализ текста,
            Вопросно-ответные системы.
        Раздел науки служит базой для научной деятельности и определяет ключевые направления работы в исследовательских проектах.
   - Определение класса "Subject":
        Subject (Предмет исследования):
        Предмет исследования — это аспект или часть объекта исследования,
        которая детализируется и рассматривается в конкретной научной работе.
   - Определение класса "Task":
        Task (Задача):
        Задача — это конкретная исследовательская или прикладная проблема, которая решается в рамках
        определенного раздела науки ("Science"). Задача определяет цель и методы работы,
        направленные на достижение научного или практического результата.
        Задачи охватывают широкий спектр направлений и часто включают использование технологий и
        методов обработки данных для решения прикладных или исследовательских вопросов.
        Примеры сущностей класса "Task":
            - Автоматическая обработка текста
            - Сегментация текста
            - Морфологический анализ/синтез
            - Синтаксический анализ
            - Разрешение неоднозначности
            - Разрешение анафоры
            - Генерация текста на естественном языке
            - Извлечение информации
            - Автоматическое реферирование
            - Извлечение терминологии
            - Автоматическая классификация текстов
            - Взаимодействие с компьютером на естественном языке
            - Документирование языков
        Задачи выступают в качестве прикладных компонентов исследований, где их решение способствует прогрессу в рамках разделов науки.

Шаг 2 (Определение кореференции и группировка):
- Определи, какие из этих упоминаний относятся к одной и той же сущности, учитывая грамматическое согласование (род, число, падеж) и смысловую близость.
- При возникновении неоднозначностей используй внутреннее рассуждение для выбора наиболее логичного объединения упоминаний, но пояснения выводи только во внутреннем процессе, а не в финальном результате.
- Сгруппируй упоминания по сущностям.

Шаг 3 (Итоговый результат):
- Выведи результат **ТОЛЬКО** в виде массива массивов, где каждый внутренний массив содержит все варианты упоминаний, относящиеся к одной сущности.
- В итоговом ответе не должно быть никаких дополнительных комментариев, пояснений или цепочки рассуждений.

Пример:

Текст:
«Заметки об NLP (часть 3) / Habr
1  January  2010 at 18:26  Заметки об NLP (часть 3) Artificial Intelligence Natural Language Processing *(Начало: 1, 2).»

Ответ:
[
  ['NLP', 'NLP', 'Natural Language Processing', 'NLP', 'Natural Language Processing']
]


Теперь выполни аналогичный анализ для следующего текста, соблюдая описанные шаги, используя внутренние рассуждения для выбора наиболее вероятных связей, но выводя на экран только итоговый результат:

"

Обзор современных инструментов дата-аналитика / Habr


              16  February  2021 at 18:16  Обзор современных инструментов дата-аналитика Data Mining *Data visualization *Machine learning *Artificial Intelligence       


Сразу уточню, что видов аналитиков очень много, так как анализировать можно все что угодно. Это и веб-аналитики, и классические data scientists, и бизнес-аналитики, и финансовые аналитики, а также продуктовые, системные и UX аналитики. Причина такого разнообразия, по-видимому, в том, что в ряде крупных компаний над созданием одной платформы или продукта одновременно могут работать десятки, а то и сотни программистов и аналитиков. В таких условиях происходит сильное сужение специализации.


Все перечисленные виды аналитиков используют свои специфические наборы инструментов. Поэтому сосредоточусь только непосредственно на сфере анализа данных вне контекста происхождения этих самых данных. Таким образом мы исключаем из обзора системы веб-аналитики, CRM, ERP, системы складского учета, управления логистикой и документооборотом.

1. Языки программирования

Не будем касаться исключительных, уникальных или редких случаев. Рассмотрим все только самое популярное. И конечно же, в первую очередь, это язык python.

Python


Python служит главным инструментом в руках data scientists, не имеет строгой типизации и предназначен для быстрой разработки прототипов или написания коротких сценариев или скриптов. Люди разбирающиеся в программировании и computer science его часто критикуют за то, что алгоритмы написанные на чистом python оказываются не оптимальными в отношении своей производительности и требованиям к памяти.


Но тем не менее у данного языка программирования есть много плюсов. Среди них я бы отметил то, что python преподают уже практически везде, в связи с чем сравнительно легко найти аналитика знающего python. Второе преимущество — это библиотеки для работы с данными и машинного обучения, имеющие удобный интерфейс. Например, на основе библиотеки sklearn легко собирать конвейеры предварительной обработки данных и построения моделей. Все алгоритмы и настройки машинного обучения инкапсулированы внутри классов и объектов, что делает код очень простым.

R


До недавнего времени основным конкурентом python был язык R. Пожелания к знанию R и сейчас изредка встречаются в описаниях вакансий по крайней мере в разделе «преимущества». До середины 2018-го года я и сам программировал на R. И при попытке автоматизировать часть своей работы по машинному обучению чуть не изобрел велосипед, пытаясь на R создать конвейеры подготовки данных и обучения моделей. Чуть позже узнал, что такие конвейеры уже давно существуют в библиотеке sklearn и называются pipeline.

C++, C#


Если существующих библиотек на python недостаточно и требуется реализовать новый алгоритм с высокой производительностью, к вашим услугам компилируемый и статически типизированный язык C++ или похожий на него язык C#.

MatLab


Язык MatLab встроен в одноименный пакет программ и интерактивную среду инженерных расчетов. Правда предназначен данный язык в большей степени для решения технических задач, а не для выполнения финансового или бизнес-анализа. Например, мне посчастливилось применять MatLab дважды: в процессе исследования сигналов акустической эмиссии в конструкциях, а также при обработке человеческой речи.


Существует ряд библиотек машинного обучения с API для других языков программирования, таких как Java, JavaScript, Scala и т.д. Но останавливаться на них не буду поскольку цель статьи немного иная.


Прошу немного потерпеть. Обо всем вы узнаете в следующих разделах.

2. AutoML и визуальные конструкторы

AutoML согласно своей основной идее резко упрощает задачу исследователя и сводит несколько шагов по изучению и подготовке данных, конструированию признаков, выбору и сравнению алгоритма машинного обучения и настройке гиперпараметров к одному единственному шагу. И этот шаг заключается в выборе и настройке одного большого ящика под названием AutoML. Результатом запуска алгоритма AutoML является сконструированный и соответствующим образом настроенный и обученный pipeline. Остается только брать «сырые» данные, подсовывать их в pipeline и ждать на выходе результат в виде прогнозов.


Ящик под названием «AutoML» выглядит либо как библиотека машинного обучения, либо как веб-сервис куда заливаются данные.


Если это библиотека, то она отличается от sklearn тем, что наш привычный код в 20-30 строк сжимается до 5 строк. Известный пример такой библиотеки H2O.


Другой пример — библиотека MLBox. Про нее в интернете можно найти истории, о том как применение MLBox позволило попасть в топовые 5% на соревнованиях kaggle.


Теперь несколько слов об облачных сервисах AutoML. Во первых, свои технические решения спешат представить все основные цифровые гиганты. Вот некоторые из них: Google AutoML Tables, Azure Machine Learning (Microsoft), SageMaker Autopilot (Amazon). Перечисленные сервисы должны быть интересны в первую очередь тем компаниям, которые разрабатывают аналитические системы на облачных платформах. Очень удобно, когда и инфраструктуру данных, и вычислительные ресурсы, и готовые алгоритмы машинного обучения предоставляет один и тот же провайдер. Интеграция получается поистине бесшовной.


Помимо цифровых гигантов на рынке AutoML появляются и игроки поменьше. Например, непосредственно в настоящий момент в компании Bell Integrator идет активная работа над платформой neuton.ai.


В этом же разделе стоит вспомнить про системы машинного обучения, занимающие промежуточные позиции между непосредственным программированием на R и Python и полностью упакованным в коробку AutoML. Это так называемые конструкторы workflow. Два типичных примера: конструктор машинного обучения Azure от Microsoft и платформа SberDS Сбербанка.


Конструктор представляет собой набор кубиков, из которых можно собрать весь конвейер машинного обучения, включая финальную проверку работоспособности модели. Это несомненно красивое решение для людей с визуальным типом мышления, которым удобно представлять процесс машинного обучения и тестирования моделей в виде схем.

3. Инструменты BI

Здесь бы я хотел рассмотреть несколько BI решений в области аналитики: Power BI, Tableau, Qlik Sense, QlikView и Excel.

Power BI


Power BI — это набор аналитических инструментов от Microsoft, которые доступны в виде десктопных приложений и облачных сервисов. Существуют корпоративные решения, работающие на закрытой it-инфраструктуре компании. Работа в Power BI Desktop или Power BI Services не требует навыков программирования. Предусмотрена возможность онлайн-интеграции с внешними источниками данных, а также загрузка данных в формате csv.


Power BI способен решать задачи машинного обучения посредством AutoML, то есть для построения модели классификации или регрессии писать программный код как на питоне не придется. Кроме стандартных задач анализа табличных данных в функционал встроены технологии анализа тональности, извлечения ключевых фраз, распознавания языка и добавления тегов к изображению.

Tableau


Tableau также представляет собой целое семейство онлайн и десктопных приложений, как и Power BI. Данные приложения имеют простой визуальный интерфейс и позволяют работать методом перетаскивания drag-and-drop. Красивые графики строятся буквально за несколько кликов. Также данные можно анализировать в табличном виде и применять к ним различные фильтры.


Tableau позволяет решать и задачи машинного обучения, такие как регрессия, прогнозирование временных рядов, кластерный анализ. А главное, Tableau способен интегрироваться с внешними скриптами на R и Python. Получается легко расширяемый инструмент.

Qlik Sence и QlikView


Qlik Sence и QlikView по позиционированию и интерфейсу отличаются между собой, но по сути и по алгоритмам решения задач построены на одном движке. QlikView — корпоративная платформа, которой управляют it-специалисты, Qlik Sence — инструмент для личного использования без необходимости обращаться за помощью в тех. поддержку.


При первом же знакомстве бросается в глаза «красота» и легкость визуализации. Это тот самый инструмент, если надо построить приятный глазу дашборд для руководства. С моей точки зрения особенно зрелищным выглядит возможность менять масштаб при анализе географических карт и кластеров на двухмерных графиках. Вспоминаются кадры из фильмов, где на фото со спутников пытаются разглядеть номер автомобиля или выделить человека из толпы на площади.


Еще одна интересная опция — наличие мобильного приложения для выполнения анализа со смартфона. Так и представляется топ-менеджер сети ритейла, спешащий на очередной рейс в аэропорту и получивший неожиданное сообщение в мессенджере со ссылкой на дашборд.

Qlik Sence интегрируется с Python, а следовательно и с машинным обучением.

Excel


Вы меня простите, но я не мог пройти мимо Excel. Сколько не смейся, но любой инструмент по своему хорош. Например, в Excel прекрасно строятся сводные таблицы и графики, буквально в несколько кликов. В сочетании с удобным табличным процессором и работой с форматом csv вполне себе хороший инструмент.

4. Изюминка на торте. Автоматическая генерация кода на основе AI

Как-то раз при знакомстве в сети мне задали вопрос «ты программируешь на python?». И когда я ответил «Да», продолжение было совершенно неожиданным.


«А ты знаешь про это… » и далее шла ссылка на ролик в Youtube 
https://www.youtube.com/watch?v=fZSFNUT6iY8&t=4s&ab_channel=FazilBabu.


Речь идет о генеративной текстовой модели от OpenAI, обученной на репозитории GitHub. На конкретных примерах показана способность модели генерировать код на Python на основании заголовка функции и ее краткого описания.


А что будет, если такую модель удастся хорошо обучить на скриптах data scientists? Это вопрос для размышлений…    Tags: аналитикdata sciencebusiness intelligencedata miningmachine learningмашинное обучениедата-аналитиканализ данных Hubs: Data MiningData visualizationMachine learningArtificial Intelligence          


"